{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "containerhost": {
            "type": "string",
            "defaultValue": "winsrvtp4",
            "metadata": {
                "description": "type the name of the container/docker host"
            }
        },
        "containername": {
            "type": "string",
            "defaultValue": "tp4container",
            "metadata": {
                "description": "specify the name of the container you will spin up"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A2",
            "metadata": {
                "description": "specify the VM size"
            }
        },
        "adminaccount": {
            "type": "string",
            "defaultValue": "azureadmin",
            "metadata": {
                "description": "type the name of the admin account"
            }
        },
        "adminpwd": {
            "type": "securestring",
            "metadata": {
                "description": "assign the admin pwd for the admin account"
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "uniquestorage",
            "metadata": {
                "description": "type the name of the storage account you will use for the containerhost"
            }
        },
        "StorageType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS"
            ]
        },
        "vNetName": {
            "type": "string",
            "defaultValue": "containervNet",
            "metadata": {
                "description": "type the name of the vNet for this container host"
            }
        }
    },
    "variables": {
        "virtualNetworkName": "[parameters('vNetName')]",
        "vnetID": "[resourceId('Microsoft.Network/virtualnetworks', variables('virtualnetworkname'))]",
        "subnetname": "Subnet-1",
        "addressprefix": "192.168.0.0/16",
        "subnetPrefix": "192.168.0.0/24",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/', variables('subnetname'))]",
        "nicname": "ConNic",
        "publicnicname": "ConPub",
        "imagepublisher": "MicrosoftWindowsServer",
        "imageoffer": "WindowsServer",
        "ipallocation": "Dynamic",
        "storagetype": "Standard_LRS",
        "imagesku": "2016-Technical-Preview-with-Containers",
        "extensionname": "CustomScriptExtension",
        "NSGName": "NSG01",
        "Rulename1": "RDP",
        "Rulename2": "HTTP",
        "Port1": "3389",
        "Port2": "80",
        "Protocol": "TCP"
    },
    "resources": [

        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[Parameters('storageaccountname')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "accountType": "[Parameters('StorageType')]"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('NSGName')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "[variables('Rulename1')]",
                        "properties": {
                            "access": "allow",
                            "destinationAddressPrefix": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "[variables('port1')]",
                            "sourcePortRange": "*",
                            "direction": "inbound",
                            "protocol": "[variables('protocol')]",
                            "priority": "1000"
                        }
                    },
                    {
                        "name": "[variables('Rulename2')]",
                        "properties": {
                            "access": "allow",
                            "destinationAddressPrefix": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "[variables('port2')]",
                            "sourcePortRange": "*",
                            "direction": "Inbound",
                            "protocol": "[variables('protocol')]",
                            "priority": "1100"
                        }  
                    }                                                                  
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('vNetName')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/NetworkSecurityGroups/', variables('NSGName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressprefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetname')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetprefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('nsgname'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicnicname')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "dynamic"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicname')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('vNetName'))]",
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicnicname'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicnicname'))]"
                            },                            
                            "subnet": {
                                "id": "[variables('subnetref')]"                                
                            }
                        }
                    }                    
                ]
            }            
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('containerhost')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicname'))]",
                "[concat('Microsoft.Storage/StorageAccounts/', parameters('storageaccountname'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "adminPassword": "[parameters('adminpwd')]",
                    "adminUsername": "[parameters('adminaccount')]",
                    "computerName": "[parameters('containerhost')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVMAgent": true
                    }
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "name": "conhost",
                        "caching": "readWrite",
                        "vhd": {
                            "uri": "[concat('http://', parameters('storageaccountname'), '.blob.core.windows.net/', 'vhds', '/', 'conhost.vhd')]"
                        }
                    },
                    "imageReference": {
                        "offer": "[variables('imageoffer')]",
                        "publisher": "[variables('imagepublisher')]",
                        "sku": "[variables('imagesku')]",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicname'))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('containerhost'),'/CustomScriptExtension')]",
                    "apiVersion": "2015-06-15",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', parameters('containerhost'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.4",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                          "fileUris": [ "https://raw.githubusercontent.com/Claustn/AzureDeploy/master/AzureContainerWeb/container-web-server.ps1" ],
                            "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ','Container-web-server.ps1 ', '-containername ', parameters('containername'))]"
                        }
                    }
                }
            ]
        }
    ]
}                                          